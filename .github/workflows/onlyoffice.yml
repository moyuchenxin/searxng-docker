# This workflow will build and push a new container image to Alibaba Cloud Container Registry (ACR),
# and then will deploy it to Alibaba Cloud Container Service for Kubernetes (ACK), when there is a push to the "master" branch.
#
# To use this workflow, you will need to complete the following set-up steps:
#
# 1. Create an ACR repository to store your container images.
#    You can use ACR EE instance for more security and better performance.
#    For instructions see https://www.alibabacloud.com/help/doc-detail/142168.htm
#
# 2. Create an ACK cluster to run your containerized application.
#    You can use ACK Pro cluster for more security and better performance.
#    For instructions see https://www.alibabacloud.com/help/doc-detail/95108.htm
#
# 3. Store your AccessKey pair in GitHub Actions secrets named `ACCESS_KEY_ID` and `ACCESS_KEY_SECRET`.
#    For instructions on setting up secrets see: https://developer.github.com/actions/managing-workflows/storing-secrets/
#
# 4. Change the values for the REGION_ID, REGISTRY, NAMESPACE, IMAGE, ACK_CLUSTER_ID, and ACK_DEPLOYMENT_NAME.
#

name: Build and Deploy to ACK

on:
  push:
    branches: [ "master" ]

# Environment variables available to all jobs and steps in this workflow.
env:
  REGISTRY: crpi-1qcaf3xdapsfuhwi.cn-hangzhou.personal.cr.aliyuncs.com
  NAMESPACE: moyuchenxin
  IMAGE: onlyoffice/documentserver
  TAG: latest

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    # 1.2 Build and push image to ACR
    - name: Build and push image to ACR
      run: |
        docker login --username=墨语尘心  --password=WYzhai@360521 crpi-1qcaf3xdapsfuhwi.cn-hangzhou.personal.cr.aliyuncs.com
        docker pull onlyoffice/documentserver:latest
        new_image="$REGISTRY/$NAMESPACE/$IMAGE:$TAG"
        echo "$new_image"
        docker tag onlyoffice/documentserver:latest $new_image
        docker push $new_image
